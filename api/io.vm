
@.string = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.string.1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.string.2 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@.string.3 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.string.4 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define void @io.print(i8* %s) {
  %1 = alloca i8*, align 8
  store i8* %s, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.string, i32 0, i32 0), i8* %2)
  ret void
}

declare i32 @printf(i8*, ...)

define void @io.printInt(i32 %i) {
  %1 = alloca i32, align 4
  store i32 %i, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.string.1, i32 0, i32 0), i32 %2)
  ret void
}

define void @io.printDouble(double %d) {
  %1 = alloca double, align 8
  store double %d, double* %1, align 8
  %2 = load double, double* %1, align 8
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.string.2, i32 0, i32 0), double %2)
  ret void
}

define void @io.printChar(i8 signext %c) {
  %1 = alloca i8, align 1
  store i8 %c, i8* %1, align 1
  %2 = load i8, i8* %1, align 1
  %3 = sext i8 %2 to i32
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.string.3, i32 0, i32 0), i32 %3)
  ret void
}

define i8* @io.input() {
  %s = alloca i8*, align 8
  %1 = load i8*, i8** %s, align 8
  %2 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.string.4, i32 0, i32 0), i8* %1)
  %3 = load i8*, i8** %s, align 8
  ret i8* %3
}

declare i32 @__isoc99_scanf(i8*, ...)

define signext i8 @io.inputChar() {
  %c = alloca i8, align 1
  %1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.string.3, i32 0, i32 0), i8* %c)
  %2 = load i8, i8* %c, align 1
  ret i8 %2
}

define i32 @io.inputInt() {
  %i = alloca i32, align 4
  %1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.string.1, i32 0, i32 0), i32* %i)
  %2 = load i32, i32* %i, align 4
  ret i32 %2
}

define double @io.inputDouble() {
  %d = alloca double, align 8
  %1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.string.2, i32 0, i32 0), double* %d)
  %2 = load double, double* %d, align 8
  ret double %2
}
